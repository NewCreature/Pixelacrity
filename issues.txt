Quixel 0.1 Issues
-----------------

[ ]Allow floating selection to be moved.

[ ]Add controls for resizing selection.

   [ ]Finish box implementation. We need to fix the position of the mid-box
      handles so they can be positioned in the middle of the pixel when the box
      with or height is an even number.

      The logic flow should be to update the handle positions each frame that
      the selection is active. When a handle is being moved, we should update
      all of the handle positions during the handle move logic as well.

      Handles will probably need some extra data to keep track of where they
      were clicked, whether they are currently being moved, and where they
      currently are. We should snap the handles to the pixel grid and require
      that the handle be moved past the halfway point of the pixel before
      snapping into the next pixel location.

[ ]Investigate why pixel x-coordinate is offset by -1.

   [ ]This might be a bug with Apple high resolution displays. I wasn't able to
      replicate the issue on a normal 1080p monitor.

   [ ]The mouse coordinate seems to be correct as interacting with other
      elements of the UI work properly.

[ ]Add ability to export image files.

   [ ]Export current frame to specified file.

      [ ]We should default to exporting the whole image if no frame is
         selected.

      [ ]Consider saving the export path for each frame in the canvas settings
         file and adding a re-export option that overwrites the previously
         exported file.

      [ ]Investigate compositing methods for exporting multi-layered canvases.
         The current method will supposedly result in inaccurate colors where
         alpha is used, but I'm not sure that applies to non-filtered textures.

[ ]Implement frame editing.

   [ ]There should be handles on the corners of each frame so we can edit them
      by dragging the handles.

   [ ]There should be a special handle on the top edge to make a frame the
      current frame.

   [ ]Need controls for adding and removing frames (menu items, etc.).

[ ]Add color palette with all primary and secondary colors.


Closed Issues
-------------

[X]Investigate why pixels along the right and bottom edge of the canvas are
   disappearing.

[X]Finish implementing color selection.

   [X]Add color palette.

   [X]Add current colors element.

   [X]Finish color picker element implementation.

      [X]Investigate why t3gui_slider_proc() crashes with the default theme.

      [X]Add slider for setting color shade.

         [X]Add a color element for the slider and update the color based on the
            position of the slider.

      [X]Add slider for setting color alpha.

         [X]Add a color element for the slider and update the color based on the
            position of the slider.

      [X]Update position of slider based on the lightness value of the selected
         color. We might want to move the black and white color elements on the
         color picker to be adjacent to the other shades so the slider will
         correspond exactly with the shade selected.

      [X]Offer 9 shades of current base color in addition to black and white.

         [X]Separate the black and white color elements from the main color
            picker element.

            [X]Fix position of white.

[X]Modify save routine to utilize import/export code instead of saving entire
   tiles.

   [X]Update canvas_helpers module to handle different rendering scenarios. When
      saving the canvas, we need all of the data in the canvas to be saved.
      Exports should honor flags and other things that affect the final output.

      We can probably get away with adding an ignore_flags argument to the
      rendering functions. We can logically combine the canvas flags with the
      ignore_flags parameter and use the result as our flags. This would allow
      us to use the same function as our final export routine as well as saving
      the canvas data into our internal file format.

      Ultimately, we want the raw image data to make it into the saved data
      when saving our canvas. Then we import that information back into a new
      canvas instead of loading the canvas directly like we do now.

[X]Add ability to import image files.

   [X]Add UI for importing images (menu, file dialog, etc.).

   [X]Ensure pre-multiplied alpha setting is correct when importing images. Pre-
      multiplied alpha should always be disabled when loading images.

[X]Fix saving with QUIXEL_CANVAS_SAVE_MINIMAL causing alpha information to be
   lost. We need to implement a pixel shader so we can render the correct colors
   without using pre-multiplied alpha. This will also fix the incorrect
   rendering of alpha blended colors throughout the entire program.

   [X]For now, we render the bottom layer using the copy blending mode and
      others using the no pre-multiplied alpha standard blending mode. This
      fixes the issue of the alpha being lost when saving the canvas with
      QUIXEL_CANVAS_SAVE_MINIMAL, since we render each layer to a separate
      bitmap. This will not give the best results when exporting a full multi-
      layer canvas to an image file. We need to implement a compositing method
      so we can export the most accurate image data.

[X]Allow saving directly back into loaded image if no data will be lost.

[X]Clear scratch bitmap when starting a selection.

[X]Selection tool erases pixels adjacent to the selection box. Check coordinates
   to ensure we only erase what's within the selection area.
