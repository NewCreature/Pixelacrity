Pixelacrity 0.3.3 Issues
------------------------

[ ]Crash when loading an empty canvas file.

[ ]Crash when pasting while using frame tool.

[ ]Look into re-export not working.

[ ]Add color replace tool.

[ ]Add dropper mode to get apparent color.

[ ]Undo states need to be cleared when loading a canvas or creating a new one.

[ ]Add GUI themes.

   [X]We need a main theme module that contains references to various resources
      used by the UI module.

   [X]Define UI graphical element scale factor within theme.

   [X]Define color element size within theme.

   [X]Define margins and element spacing independently within theme.

   [ ]Add a standard UI theme.

   [ ]Add a standard 2x UI theme for high resolution displays.

   [X]Define button size within theme.

[ ]Add ability to load and save color palettes.

[ ]Add GUI elements related to the current tool configuration.

   [ ]The current brush should be visible.

   [ ]Allow selecting between copy and composite rendering for tools.

   [ ]Allow toggling outline mode for filled tools.

[ ]Allow contents of frame to be moved along with frame if Shift key is held
   when frame is first dragged. We can probably do this by piggybacking off
   of the floating selection code.

[ ]Add fallback software rendering method for exporting canvas so we can render
   it to a memory bitmap without relying on pre-multiplied alpha. We can't use
   the pre-multiplied alpha shader when the target it a memory bitmap.

[ ]Mouse cursor doesn't update properly after resizing the window.

   [ ]This is an Allegro bug. Will look into getting them to fix it on their
      end.

[ ]Implement full screen preview.

[ ]Allow scrolling the canvas by holding the mouse wheel button and moving the
   mouse.

[ ]Make selections rotatable and scaleable.

[ ]Fix oval tool missing pixels on slim ovals.

[ ]Crash when resizing on M1 Macbook Air.

   [ ]UNSUPPORTED (log once): setPrimitiveRestartEnabled:index: unsupported!

[ ]Investigate why pixel x-coordinate is offset by -1.

   [ ]Mouse coordinates seem to be off when the window size requested by
      Allegro differs from what it actually gets. This should be fixed in
      Allegro.

[ ]Consider allowing flood fill to be bound by the current frame if the user
   clicks within a frame.

   [ ]Use a modifier key to enable this mode. I'm thinking Ctrl+Click to make
      the flood fill tool restrict itself to filling inside the current frame.

[ ]Consider allowing flood fill to be bound by the visible part of the canvas.

   [ ]Use a modifier key to enable this mode. I'm thinking Ctrl+Click to make
      the flood fill tool restrict itself to filling inside the visible part of
      the canvas.

[ ]Finish implementing color palette.

   [ ]Make colors configurable. The default palette should be able to be
      restored at any time. Custom color palettes should be able to be saved and
      reloaded.

[ ]Improve image export options.

   [ ]Export current frame to specified file.

      [X]We should default to exporting the whole image if no frame is
         selected.

      [ ]Consider saving the export path for each frame in the canvas settings
         file and adding a re-export option that overwrites the previously
         exported file.

      [ ]Investigate compositing methods for exporting multi-layered canvases.
         The current method will supposedly result in inaccurate colors where
         alpha is used, but I'm not sure that applies to non-filtered textures.


Closed Issues
-------------

[X]Investigate why pixels along the right and bottom edge of the canvas are
   disappearing.

[X]Finish implementing color selection.

   [X]Add color palette.

   [X]Add current colors element.

   [X]Finish color picker element implementation.

      [X]Investigate why t3gui_slider_proc() crashes with the default theme.

      [X]Add slider for setting color shade.

         [X]Add a color element for the slider and update the color based on the
            position of the slider.

      [X]Add slider for setting color alpha.

         [X]Add a color element for the slider and update the color based on the
            position of the slider.

      [X]Update position of slider based on the lightness value of the selected
         color. We might want to move the black and white color elements on the
         color picker to be adjacent to the other shades so the slider will
         correspond exactly with the shade selected.

      [X]Offer 9 shades of current base color in addition to black and white.

         [X]Separate the black and white color elements from the main color
            picker element.

            [X]Fix position of white.

[X]Modify save routine to utilize import/export code instead of saving entire
   tiles.

   [X]Update canvas_helpers module to handle different rendering scenarios. When
      saving the canvas, we need all of the data in the canvas to be saved.
      Exports should honor flags and other things that affect the final output.

      We can probably get away with adding an ignore_flags argument to the
      rendering functions. We can logically combine the canvas flags with the
      ignore_flags parameter and use the result as our flags. This would allow
      us to use the same function as our final export routine as well as saving
      the canvas data into our internal file format.

      Ultimately, we want the raw image data to make it into the saved data
      when saving our canvas. Then we import that information back into a new
      canvas instead of loading the canvas directly like we do now.

[X]Add ability to import image files.

   [X]Add UI for importing images (menu, file dialog, etc.).

   [X]Ensure pre-multiplied alpha setting is correct when importing images. Pre-
      multiplied alpha should always be disabled when loading images.

[X]Fix saving with PA_CANVAS_SAVE_MINIMAL causing alpha information to be
   lost. We need to implement a pixel shader so we can render the correct colors
   without using pre-multiplied alpha. This will also fix the incorrect
   rendering of alpha blended colors throughout the entire program.

   [X]For now, we render the bottom layer using the copy blending mode and
      others using the no pre-multiplied alpha standard blending mode. This
      fixes the issue of the alpha being lost when saving the canvas with
      PA_CANVAS_SAVE_MINIMAL, since we render each layer to a separate
      bitmap. This will not give the best results when exporting a full multi-
      layer canvas to an image file. We need to implement a compositing method
      so we can export the most accurate image data.

[X]Allow saving directly back into loaded image if no data will be lost.

[X]Clear scratch bitmap when starting a selection.

[X]Selection tool erases pixels adjacent to the selection box. Check coordinates
   to ensure we only erase what's within the selection area.

[X]Add controls for resizing selection.

   [X]Finish box implementation. We need to fix the position of the mid-box
      handles so they can be positioned in the middle of the pixel when the box
      with or height is an even number.

      The logic flow should be to update the handle positions each frame that
      the selection is active. When a handle is being moved, we should update
      all of the handle positions during the handle move logic as well.

      Handles will probably need some extra data to keep track of where they
      were clicked, whether they are currently being moved, and where they
      currently are. We should snap the handles to the pixel grid and require
      that the handle be moved past the halfway point of the pixel before
      snapping into the next pixel location.

[X]Allow floating selection to be moved.

   [X]Contents of selection are erased when releasing the mouse button after
      move.

   [X]Selection box drifts when moving handles back and forth accross each
      other.

   [X]Can't select handle when hovering over selection.

   [X]Selection should not stop floating until user action. When moving a
      selection around, we don't want to pick up background elements when we are
      trying to get the position of our floating selection correct.

   [X]Resizing a selection should unfloat and refloat the selection.

   [X]It might be worth consolidating the initial selection and resize code. We
      can make the selection a 1x1 box initially and select the upper-left
      handle. Running the selection resize logic from there should give us the
      same results as creating the box separately.

[X]Line tool places start and end pixels too far to the left.

[X]Pixel tool draws to incorrect location.

[X]Pixel tool doesn't draw to canvas when the user releases the mouse button.

   [X]Finish implementing drawing scratch back to canvas on mouse button
      release.

[X]Pixel tool doesn't draw the canvas correctly while the user is drawing
   pixels.

[X]Make pixel tool work like the other tools by rendering to a scratch bitmap
   before ultimately rendering to the canvas when the user releases the mouse
   button. This is primarily to optimize undo state sizes by only saving the
   area that was edited. For large drawings, the old method would have to save
   huge amounts of data each time the pixel tool was used.

[X]Drawing tools seemingly randomly use incorrect color.

   [ ]This happens because we are using t3f_mouse_button[] to detect which
      button was pressed. We need to add a way to differentiate buttons into
      T3GUI.

[X]Finish undo implementation.

   [X]Move undo system into its own module since we will need a lot of functions
      for the various types of undo states.

   [X]Implement named undo states.

   [X]Implement applying undo states.

   [X]Implement saving and applying redo states.

   [X]Rework undo/redo naming to make it more flexible. We should save the name
      of the action only and build the final menu item name from that data.

   [X]Add support for multiple types of undo states.

[X]Implement backup system. We should save a timestamped backup every 10 minutes
   so testers don't lose a lot of work to crashes.

[X]Ask to save changes when closing a canvas.

[X]Finish flood fill implementation.

   [X]Make undoable.

      [X]Get dimensions of canvas to reduce the search area. We can save this
         area as an undo state, then flood fill the temp bitmap, and finally
         overwrite the canvas data if the fill was successful.

   [X]See if we can use a linked list instead of a queue to remove the hard
      limit on how much a flood fill can handle filling.

   [X]Fix flood fill failure possibly messing up a drawing if the user attempts
      to flood fill and some pixels are the same as the target color.

      [X]If flood fill fails, we should just return 'false' and restore the
         original data from the undo state we created before performing the
         operation.

   [X]Make flood fill work across multiple bitmaps.

[X]Finish layer interface implementation.

   [X]Decouple adding layers from 'quixel_expand_canvas()'.

   [X]The user should be able to add/remove layers as needed.
      'canvas->layer_max' should be changed based on user action. We need the
      interface to be clear and consistent in how it shows layer information to
      the user. The current method of having the user select layers that don't
      exist yet is unintuitive.

   [X]Add UI elements for adding/removing layers.

   [X]Add 'Layer' menu for accessing layer related functionality.

   [X]Always highlight the currently selected layer in the layer list.

   [X]Layer list should not take over keyboard input.

[X]See about updating pixel shader to produce more accurate color blending.

   [X]Color should blend toward the color of the pixel being drawn by alpha.

[X]Don't destroy UI and recreate it on resize.

[X]Make scroll speed independent of zoom level.

[X]Fix color picker not visible.

[X]Right-clicking while drawing with left mouse button cancels out drawing
   operation. We should ignore MSG_MOUSEDOWN when other button is already held.

[X]Implement unfloat selection redo.

[X]Implement float selection redo.

[X]Pixel tool sometimes loses some pixels at edge.

[X]Scratch bitmap is not large enough to cover entire screen when using pixel
   tool. We should either make it larger, or just position it differently.

   [X]I think the tool should be reimplemented using a linked list of points.
      We can just redraw all the lines each frame, just like the other tools.

[X]Store layer in undo state, even if the layer has no bitmap data. We still
   need to know which layer the undo state applies to.

[X]Adding and removing layers should mark the canvas as modified.

[X]Handle canvas expansion for unfloat selection.

[X]Fix drawing primitives not rendering to all affected canvas bitmaps.

   [X]Drawing a rectangle that should render to 4 canvas bitmaps only actually
      renders to the two where the start and end points reside.

[X]Adjust the canvas editor view position to keep its center in the center of
   the display when resizing.

[X]Crash when loading canvas.

[X]Crash when loading image as canvas.

[X]Use separate bitmap for floating selection. The scratch bitmap may not be big
   enough.

[X]Finish infinite canvas implementation.

   [X]Handle canvas bitmap array expansion in canvas editor module. We need to
      be able to adjust the editor variables when shifts occur.

      [X]Handle expanding to the right and down.

   [X]Fix canvas shift making drawing disappear.

   [X]Make undo/redo work when an action causes the canvas bitmap array to be
      shifted.

   [X]Make selection undo/redo work even if changes happen that cause the canvas
      to be shifted.

[X]Undo counter desyncs when applying an unfloat selection undo. Duplicate by
   drawing some pixels, selecting them, floating them, unfloating them, then
   undoing the unfloat.

   [X]Was actually the modified counter that was not being updated. Fixed.

[X]Undoing float selection can cause pixels at the bottom edge to disappear.

[X]Crash when attempting to flood fill brand new blank canvas.

[X]Moving away from selection tool causes translucent pixels in the layer to
   have their alpha combined. I think this is being caused by the incorrect
   blend mode being set when copying the scratch data back to the canvas.

   [X]It only happens when a floating selection is unfloated.

   [X]Unfloating uses composite rendering mode. Need to see if copy rendering
      will work or if we need to make a new mode.

   [X]Looks like we'll need to implement a new rendering mode that only copies
      pixels with alpha > 0. This will have to be manually done by copying the
      individual pixels to the destination bitmaps.

      [X]Modify how floating selection rendering works. We should render the
         visible part of the current layer to the scratch bitmap and copy the combined bitmap from the selection data onto it and render the scratch
         bitmap to the screen. This is the same way the other tools work.

[X]Moving selection is rendered above layers. We should render it in its
   position in the layer stack.

[X]Only allow selection to remain as long as the selection tool is active.

[X]Flood fill failed to completely fill vertical line of pixels.

   [X]Flood fill leaves traces when it fails to complete. Maybe we should just
      add another list that keeps track of changed pixels so we can revert more
      easily.

[X]Add erase tool.

[X]Implement image import. The image will be imported into a floating selection
   at the center of the view so the user has control over the final placement.

[X]Implement clipboard.

[X]Highlight currently selected tool.

[X]Crash when deleting layer.

[X]Resizing window causes freeze on Windows.

[X]Flood fill button doesn't indicate it's selected.

[X]Status bar is not at the bottom of the window on Windows. I think it might be
   something to do with the window being implicitly resized when adding a menu.

   [X]This gets corrected after a resize operation. Maybe something to do with
      T3F trying to restore the window size from the previous session.

[X]Add keyboard shortcuts for undo/redo.

[X]Figure out why moving where we set the pre-multiplied alpha shader before
   rendering the UI to the main UI rendering code causes the color GUI elements
   to render incorrectly.

[X]Look into why line fragments used by the pixel tool don't render identically
   to the scratch bitmap and canvas.

[X]Implement brush in oval tool.

[X]Investigate artifacting when releasing mouse button to commit drawing to
   canvas on Linux. Some areas around primitives being drawn to canvas can
   disappear.

[X]Fix save changes prompt showing up when attempting to import an image.

[X]Add controls for changing the position of a layer within the layer stack.

[X]Make mouse wheel change zoom level.

[X]Add shortcut to show only the current layer.

[X]Add optional crosshair to line up drawing.

[X]Fix tool undo not working when undo state contains transparent pixels.

[X]Reverse order of layer list to make it more intuitive.

[X]Implement brush in rectangle tool.

[X]Allow moving selections between layers.

[X]Make switching layer float current selection.

[X]Optimize flood fill.

[X]Add function to move a selection between layers.

[X]Fix right-clicking a color not getting correct color on first click.

[X]Add shortcut keys for changing between tools.

[X]Don't allow 1x1 selections.

[X]Importing an image doesn't always work.

   [X]If I load an image as a canvas and immediately try to import, nothing is
      actually imported.

[X]Tool undo leaves "droppings" on canvas occasionally. Seems like it has to
   do with the mouse moving while the button is released.

  [X]I think the variable being used to decide where to draw is not synchronized
     with the variable that is being used to determine the size of the area
     taken up by the primitive.

[X]Add float/unfloat selection options to Edit menu.

[X]Can't create new selection after cutting a selection.

[X]Implement flip and turn for selections.

[X]Not all frames are rendering.

   [X]Need to shift frames when shifting the canvas.

[X]Make backspace work as delete since Macs don't have a delete key.

[X]Crash when using flood fill.

   [X]Log said drawing a line immediately before.

[X]Implement tool modes for various tools.

   [X]Snap line to angle.

   [X]Snap rectangle to square.

   [X]Snap oval to circle.

   [X]Snap floating selection to 90 degree angle from starting position.

[X]Paste in place doesn't paste to the correct location if recopying a pasted-
   in-place selection.

[X]Remember last path for canvas and image files.

[X]Changing the alpha on a color make alters the shade.

[X]Canvas editor settings don't always load correctly.

[X]Get "Can't allocate memory" when attempting to float a blank selection on an
   empty canvas.

[X]Creating a new canvas should reset the canvas editor variables.

   [X]The canvas path needs to be reset.

   [X]The selected layer needs to be reset.

[X]The color picker is not updated when using the dropper tool to select a
   color.

[X]Selecting a color from the color picker and subsequently using the alpha
   slider resets the shad slider to the last used shade level.

[X]Crash when pasting from the clipboard.

[X]Translucency doesn't work correctly in floating selection preview.

   [X]I think the preview needs to be rendered to scratch first before finally
      being rendered to the screen. The pixels rendered with the conditional
      copy shader are copied verbatim to the screen which, I believe, ends up
      throwing out the alpha value (the backbuffer can't contain alpha).

[X]Allow selections to be multi-layered.

   [X]Holding Shift while the mouse button is released should cause the
      selection to become multi-layered.

      [X]Decided to make the multi-layer aspect part of the float functionality.
         Holding shift while dragging a selection will cause it to float the
         current selection as multi-layer.

   [X]Modify the selection and clipboard when layers are added or removed. The
      bitmap arrays need to stay synchronized with the canvas.

   [X]Ctrl+Shift+C should make a multi-layer copy of the current selection if it
      isn't floating.

   [X]The main canvas editor rendering code will need to handle rendering the
      current selection. The scratch bitmap is only a single layer, so we will
      need to iterate through each layer, render that layer to scratch, and
      render scratch to the screen. This should allow us to utilize the
      conditional copy shader per layer with each layer finally composited to
      the backbuffer giving the expected result.

      [X]This is implemented, but it seems to be a bit buggy.

   [X]Add menu options related to multi-layer selections.

[X]Add ability to scroll by the size of the view.

[X]Clear selection when creating/loading a canvas.

[X]Canvas is not marked as modified when floating a blank selection.

[X]Add a way to have filled shapes use the other color for outline.

[X]Right-clicked colors don't show up in the color panel part of the UI.

[X]Begin implementing custom brushes.

   [X]We should add a Brush menu which we can use to reset the brush to default
      or create a brush from a selection.

[X]Crash when drawing with large brush in certain circumstances.

[X]Drawing snapped shapes causes undo to not work properly. Undo bases the area
   to save on the mouse click/release coordinates, not the final shape.

[X]Selection should be unfloated any time we are performing an action that
   would cause a selection to be discarded.

   [X]Importing an image should unfloat the selection.

[X]Update canvas dimensions when applying an undo/redo.

   [X]I think we can store the current dimensions as part of the header and just
      read those back in with every undo/redo. We'll meed to update the
      dimensions after we draw the primitive so the erasing primitive doesn't
      cause the canvas to expand. Alternatively, we can require explicitly
      updating the dimensions instead of implicitly doing it during the
      primitive rendering.

[X]Look into the preview not matching the final rendering when using the line
   tool.

[X]Change mouse cursor to hand when hovering over selection or handles.

[X]Add preview map UI element. The map will draw two rectangles representing
   the total canvas and the current view. The element should allow the user to
   adjust the view by clicking and dragging the view rectangle.

   [X]This will require implementing canvas layer size tracking. When the user
      performs any action that modifies the canvas, the canvas size should be
      updated.

[X]Recalculate canvas layer sizes when exporting a canvas without a frame.

[X]Add mechanism for remembering the debug filename and whether or not the
   program exited successfully. If the program did not successfully exit, open
   the debug log on next start.

[X]Canvas dimensions seem to be to big by 1 pixel when calculated.

[X]Default to not using outline for filled shapes.

[X]Mouse cursor doesn't update properly after switching away from selection
   tool.

[X]Finish implementing frame tool.

   [X]Crash when clicking on the canvas with frame tool selected.

   [X]Show handles for all frames while frame tool is selected.

   [X]Allow frames to be moved by clicking within the frame similar to how we
      can move selections.

[X]Allow interacting with frame handles without hovering over the frame.

[X]Add grid.

[X]Reverse functionality of Export and Export As.

[X]Crash when undoing a floating selection that was an imported bitmap.

[X]Multi-layer selection shouldn't be able to paste into canvas with different
   number of layers.

[X]Undoing float selection prevents undoing the previous action.

[X]Don't draw brush hint when using the frame tool.

[X]Pressing Del key when using frame tool should delete the currently selected
   frame.

[X]Shapes drawn over canvas tile border don't undo properly.

[X]Crash when importing.

[X]All frame handles should be updated each tick.

[X]We need a way to highlight the current frame when using the frame tool.

[X]Alpha slider shouldn't always reset when adjusting the shade.

[X]Filled oval tool preview differs from final output. I think the brush outline
   was supposed to be removed.

[X]Add shortcut for export.

[X]Ensure undo is working properly for all functions that are undoable.

   [X]Undo unfloat multi-layer selection not working.

   [X]Add undo for layer swaps.

   [X]Importing a bitmap should count as an undoable change without first
      requiring the selection to be unfloated.

   [X]Frame adding, editing, deleting should be undoable.

      [X]Copy the original box and compare at MSG_MOUSEUP. Create an undo state
         if the box differs.

   [X]Rewrite float/unfloat selection undo/redo to work with multi-layer
      selections.

      [X]Float selection undo crashes when attempting to create the redo state.

   [X]Modified counter needs to stay synched so if we undo all the way back to
      the last save it is counted as unmodified.

   [X]Flip and turn functions need to be undoable.

      [X]Need to factor out flip/turn operations from menu code so we can use it
         from other modules. We can probably put it in the selection module.

      [X]We need to track if the selection was floating when the turn occurred
         since we get an implicit float if the dimensions don't match on both
         axes.

         [X]Implicitly unfloat the selection if the state was not floating when
            the turn operation was initiated.

   [X]Look at areas where floating selections are unfloated implicitly. I think
      the desired behavior would be to have it count as an extra undoable
      modification.

   [X]Make paste undoable.

   [X]Make delete selection undoable.

   [X]Make cut selection undoable.

[X]Make a Paste Merged function.

[X]Finish 3D layer breakout view.

   [X]Figure out why vanishing point is upper-left instead of center of the
      screen.

   [X]Drawing tool preview doesn't work when in break out view.

[X]Crash on exit after removing layer while a multi-layer floating selection was
   active and then unfloating it.

[X]Optimize 'quixel_get_canvas_dimensions()'.

   [X]We should be able to track the dimensions as changes are made to the
      canvas so we don't have to keep doing the pixel scanning algorithm.

[X]Fix GUI sliders not going all the way to the full value.

[X]Fix position of canvas editor GUI element so it doesn't overlap the toolbar.

[X]Crash when dialog reaches 128 elements. Need to audit the code which is
   supposed to expand the allocated memory for dialog elements once we fill up
   the original chunk. We might get rid of the chunk implementation in favor of
   always reallocating when adding a new element.

[X]Add import and export buttons to toolbar.

[X]Look into crash when adding and immediately removing a layer on a new canvas.

[X]Selecting a frame causes a move frame action even if the frame was not moved.

[X]Make breakout view spread the layers independently of the zoom level.

[X]Drawing snapped shapes doesn't expand the canvas correctly when we start in
   negative space.

[X]Investigate crash when loading a very large image as a canvas.

[X]Figure out why layer delete button doesn't stay in hover state.

[X]Look into adding new layers messing up the cached canvas dimensions.

[X]Ensure all toolbar buttons are using the correct graphics.

[X]Make shade pickers available for left and right mouse button.

[X]Make alpha pickers available.

[X]Add ability to modify the color palette.

[X]Save color palette to canvas editor settings.
